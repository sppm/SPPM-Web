=pod

r4 - 05 Jan 2007 - NelsonFerraz

=head1 Por que tentar obstruir a leitura do seu código é uma má idéia

I<>

Frequentemente alguE<eacute>m pergunta como ofuscar o cE<oacute>digo de
um sistema, como criptografE<aacute>-lo ou qualquer coisa parecida na
intenE<ccedil>E<atilde>o de, supostamente, proteger-se de
alguE<eacute>m "roubar" o seu cE<oacute>digo. Vou tentar colocar aqui
algumas boas razE<otilde>es para mostrar por que isso E<eacute> uma
mE<aacute> idE<eacute>ia.

=head2 MotivaE<ccedil>E<otilde>es para tentar esconder o cE<oacute>digo

Esconder o cE<oacute>digo nE<atilde>o E<eacute> uma atividade simples e
tem custos associados, podendo gerar novos bugs, dificultar o debug de
um cE<oacute>digo de produE<ccedil>E<atilde>o etc. No entanto, se
alguE<eacute>m ainda assim tenta esconder o cE<oacute>digo E<eacute>
por que existe uma boa motivaE<ccedil>E<atilde>o. Vamos tentar
entendE<ecirc>-las.

=over

=item * Quero evitar alguE<eacute>m de sair vendendo o meu software

=item * Tenho um diferencial que ninguE<eacute>m pode conhecer

=back

Vamos entE<atilde>o agora entender os problemas dessas
motivaE<ccedil>E<otilde>es

=head2 Se alguE<eacute>m quiser roubar, provavelmente vai conseguir

E<Eacute> preciso deixar bem claro que o mE<aacute>ximo que vocE<ecirc>
vai conseguir fazer E<eacute> dificultar a leitura do cE<oacute>digo,
quando se trata de uma linguagem interpretada, o conjunto de comandos
que o interpretador vai receber E<eacute> de um nE<iacute>vel
consideravelmente mais alto que o conjunto de
instruE<ccedil>E<otilde>es em uma linguagem compilada para
cE<oacute>digo nativo. Linguagens de alto nE<iacute>vel possuem
mecanismos de introspecE<ccedil>E<atilde>o, e implementam um
nE<iacute>vel de abstraE<ccedil>E<atilde>o que facilmente pode ser
manipulado para obter mais informaE<ccedil>E<otilde>es sobre a
execuE<ccedil>E<atilde>o do processo.

AlE<eacute>m do mais, na maior parte dos casos o acesso ao
cE<oacute>digo fonte nE<atilde>o E<eacute> um prE<eacute>-requisito
para que alguE<eacute>m que esteja interessado em tirar vantagem do seu
software sem a sua autorizaE<ccedil>E<atilde>o, aliE<aacute>s, a
maioria dos administradores de sistema jamais chegam a manipular o
cE<oacute>digo fonte dos sistemas que administram. Dessa forma,
nE<atilde>o E<eacute> o fato do cE<oacute>digo-fonte estar
criptografado que vai impedir que ele pegue esse sistema e utilize em
outro lugar. Lembre-se, se vocE<ecirc> nE<atilde>o tem o controle
completo sobre a mE<aacute>quina que roda o aplicativo, vocE<ecirc>
nE<atilde>o tem controle nenhum sobre o sofware.

Imaginando que vocE<ecirc> implemente um mecanismo de
autenticaE<ccedil>E<atilde>o baseado em chaves pE<uacute>blicas e
chaves privadas para garantir que todos as versE<otilde>es do software
vE<atilde>o estar sob o seu controle, ainda assim, sE<oacute> E<eacute>
necessE<aacute>rio alterar o local onde estE<aacute> guardada a
informaE<ccedil>E<atilde>o de qual E<eacute> a chave do servidor e a
informaE<ccedil>E<atilde>o de onde consultar a
autenticaE<ccedil>E<atilde>o. Acredite, se E<eacute> possE<iacute>vel
fazer isso em uma aplicaE<ccedil>E<atilde>o compilada para
cE<oacute>digo nativo, E<eacute> ainda mais simples fazer isso em uma
aplicaE<ccedil>E<atilde>o que roda em um interpretador de alto
nE<iacute>vel. E isso nE<atilde>o se aplica apenas a Perl, mas
tambE<eacute>m a Python, Java, C# etc.

=head2 Obstruir o cE<oacute>digo sE<oacute> adiciona novas camadas de
problemas

=head2 A melhor forma de te proteger E<eacute> um bom contrato

Considerando o que disse acima, E<eacute> preciso antes de cima, ter
clareza que uma relaE<ccedil>E<atilde>o comercial tem que ser, em
primeiro lugar, uma relaE<ccedil>E<atilde>o de confianE<ccedil>a, se
nE<atilde>o entre as partes pelo menos entre cada uma das partes e o
contrato que ambas assinaram. Da mesma forma que o seu cliente vai
querer uma clE<aacute>usula de confidencialidade sobre as
informaE<ccedil>E<otilde>es que vocE<ecirc> vai ter acesso sobre a
empresa dele durante o perE<iacute>odo de prestaE<ccedil>E<atilde>o de
serviE<ccedil>o, vocE<ecirc> pode querer que exista uma
clE<aacute>usula de proteE<ccedil>E<atilde>o em relaE<ccedil>E<atilde>o
ao software. Lembre-se atE<eacute> mesmo a GPL E<eacute>, antes de
qualquer coisa, um contrato.

NE<atilde>o sou um advogado, mas o que eu posso recomendar E<eacute>
que vocE<ecirc> consulte um bom advogado para formatar um modelo de
contrato que vocE<ecirc> vai usar para os serviE<ccedil>os que
vocE<ecirc> vai prestar. Preveja nesse contrato multa para o caso de o
software ser transferido para alE<eacute>m do que estE<aacute>
acertado. Multas previstas em contrato sE<atilde>o sempre mais
fE<aacute>ceis de aplicar do que tentar reaver o software que foi
distribuE<iacute>do.

Se vocE<ecirc> pensa que reaver o prejuE<iacute>zo na justiE<ccedil>a
pode ser muito lento e prefere nE<atilde>o arriscar, bem, entE<atilde>o
E<eacute> melhor nE<atilde>o sair no mercado. Quem estE<aacute> na
chuva E<eacute> para se molhar e qualquer operaE<ccedil>E<atilde>o
comercial envolve risco. Um risco muito mais provE<aacute>vel do que
alguE<eacute>m "roubar" o software E<eacute> simplesmente vocE<ecirc>
levar um calote. E<Eacute> muito mais provE<aacute>vel acontecer uma
instabilidade qualquer na empresa de um cliente e vocE<ecirc> pode
nE<atilde>o conseguir receber o dinheiro que vocE<ecirc> provavelmente
contava naquele mE<ecirc>s. Se um de seus clientes tiver
motivaE<ccedil>E<atilde>o para roubar, ele vai fazE<ecirc>-lo. Nesses
casos, E<eacute> mais barato remediar do que prevenir.

=head2 Ninguem E<eacute> tE<atilde>o genial a ponto de escrever algo
unico.

VocE<ecirc> teve aquela sacada, e agora quer esconder dos outros
programadores porque acredita que esta E<eacute> sua vantagem
competetiva. O que as pessoas nE<atilde>o levam em conta E<eacute> que
em geral, o nivel dos programadores profissionais E<eacute> proximo,
nos dias de hoje nE<atilde>o hE<aacute> um programador no mundo que
faE<ccedil>a algo que nE<atilde>o pode ser feito por outros; ainda mais
se os outros se reunirem em uma comunidade, ao redor de um projeto de
cE<oacute>digo aberto. Uma longa lista de programas open source que tem
funE<ccedil>E<otilde>es parecidas ou equivalentes a de programas
fechados sE<atilde>o uma boa prova. Ao inves disso, se vocE<ecirc>
compartilhar essa sacada com o resto do mundo, sE<oacute> vai fazer a
sua reputaE<ccedil>E<atilde>o, status e credibilidade subir. E existe
vantagem competitiva maior que essa?

=head2 O que E<eacute> mais comum: pirataria de software fechado ou de
software aberto?

=head2 Por que deixar o cE<oacute>digo aberto E<eacute> uma
idE<eacute>ia melhor?

=head2 Regra de ouro nE<uacute>mero 1: VocE<ecirc> E<eacute> sE<oacute>
um, a sua empresa E<eacute> sE<oacute> uma, o mundo tem muitas pessoas
inteligentes dispostas a contribuir

=head2 Regra de ouro nE<uacute>mero 2: Cobre pelo serviE<ccedil>o que
vocE<ecirc> prestar.

=head2 E mais importante que tudo: Entenda bem o seu modelo de
negE<oacute>cio e o mercado onde vocE<ecirc> vai atuar

=head1 AUTOR

Nelson Ferraz

=cut

#Pod::HTML2Pod conversion notes:
# 7700 bytes of input
#Sun Jan 31 01:45:39 2010 mantovani
# No a_name switch not specified, so will not try to render <a name='...'>
# No a_href switch not specified, so will not try to render <a href='...'>
